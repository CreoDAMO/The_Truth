name: Deploy The Truth NFT to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          static_site_generator: static

      - name: Compile Smart Contracts
        run: |
          npx hardhat compile
          echo "Smart contracts compiled successfully"

      - name: Generate Contract ABIs for Frontend
        run: |
          mkdir -p dist/contracts
          cp -r artifacts/contracts/* dist/contracts/
          echo "Contract ABIs copied to dist"

      - name: Generate NFT Metadata
        run: |
          npm run generate-metadata
          echo "NFT metadata generated"

      - name: Compile Browser-Optimized Contracts
        run: |
          npm run compile-browser
          echo "Browser contracts compiled"

      - name: Prepare Static Assets
        run: |
          # Create distribution directory
          mkdir -p dist
          
          # Copy web application files
          cp -r "üåê Web Application"/* dist/ || cp -r Web_Application/* dist/ || echo "Web app files copied"
          
          # Copy metadata
          cp -r metadata dist/
          
          # Copy documentation
          cp -r docs dist/
          
          # Copy economy documentation
          cp economy.md dist/
          
          # Create contract addresses file for frontend
          echo "Creating contract addresses configuration..."
          cat > dist/contracts.js << 'EOF'
          // Contract addresses will be populated during deployment
          // This file is updated automatically by the deployment process
          window.CONTRACT_ADDRESSES = {
            TRUTH_NFT: process.env.TRUTH_CONTRACT_ADDRESS || '0x...',
            BONUS_GIFT: process.env.BONUS_CONTRACT_ADDRESS || '0x...',
            PAYMENT_SPLITTER: process.env.PAYMENT_SPLITTER_ADDRESS || '0x...'
          };
          
          window.NETWORK_CONFIG = {
            BASE_MAINNET: {
              chainId: '0x2105',
              chainName: 'Base',
              rpcUrls: ['https://mainnet.base.org'],
              blockExplorerUrls: ['https://basescan.org']
            },
            BASE_TESTNET: {
              chainId: '0x14A34',
              chainName: 'Base Sepolia',
              rpcUrls: ['https://sepolia.base.org'],
              blockExplorerUrls: ['https://sepolia.basescan.org']
            }
          };
          EOF

      - name: Update Frontend Configuration
        run: |
          # Update index.html to include contract addresses
          if [ -f "dist/index.html" ]; then
            sed -i '/<\/head>/i \    <script src="contracts.js"></script>' dist/index.html
          fi
          
          # Ensure relative paths work correctly
          find dist -name "*.html" -exec sed -i 's|href="/|href="./|g; s|src="/|src="./|g' {} \;

      - name: Create Documentation Index
        run: |
          cat > dist/docs/index.html << 'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>The Truth NFT - Documentation</title>
              <style>
                  body { font-family: -apple-system, BlinkMacSystemFont, sans-serif; max-width: 800px; margin: 0 auto; padding: 2rem; }
                  .nav { background: #f8f9fa; padding: 1rem; border-radius: 8px; margin-bottom: 2rem; }
                  .nav a { margin-right: 1rem; text-decoration: none; color: #007bff; }
                  .section { margin-bottom: 2rem; padding: 1.5rem; border: 1px solid #dee2e6; border-radius: 8px; }
              </style>
          </head>
          <body>
              <div class="nav">
                  <a href="../index.html">üè† Home</a>
                  <a href="../deploy.html">üöÄ Deploy</a>
                  <a href="../shop.html">üõí Shop</a>
                  <a href="index.html">üìö Docs</a>
              </div>
              
              <h1>The Truth NFT Documentation</h1>
              <p><em>"The Truth Doesn't Need To Be Pushed, Only The Lie...The Lie Only Needs To Be Whispered, But The Truth Always Remains Silent waiting to be Witnessed."</em></p>
              
              <div class="section">
                  <h2>üìã Project Overview</h2>
                  <p>A 77-edition NFT collection preserving a philosophical experiment demonstrating AI systems' institutional translation gaps.</p>
                  <ul>
                      <li><strong>Main Collection:</strong> 77 editions at 0.1695 ETH (~$777)</li>
                      <li><strong>Bonus Collection:</strong> 145,000 editions at 0.039 ETH (~$145)</li>
                      <li><strong>Network:</strong> Base (Coinbase L2)</li>
                      <li><strong>Standards:</strong> ERC-721 with ERC-2981 royalties (10%)</li>
                  </ul>
              </div>
              
              <div class="section">
                  <h2>üèóÔ∏è Architecture</h2>
                  <ul>
                      <li><a href="../contracts/TheTruth.sol">TheTruth.sol</a> - Main NFT Contract</li>
                      <li><a href="../contracts/TruthBonusGift.sol">TruthBonusGift.sol</a> - Bonus Collection</li>
                      <li><a href="../contracts/PaymentSplitter.sol">PaymentSplitter.sol</a> - Revenue Distribution</li>
                  </ul>
              </div>
              
              <div class="section">
                  <h2>üí∞ Economic Model</h2>
                  <p>Dual revenue streams with full tax compliance:</p>
                  <ul>
                      <li><strong>Blockchain:</strong> Direct NFT sales with 10% royalties</li>
                      <li><strong>Traditional:</strong> Audiobooks, PDFs, merchandise</li>
                      <li><strong>Tax ID:</strong> 23-8019835728-2 (Florida)</li>
                      <li><strong>Integration:</strong> Stripe Tax API for automatic compliance</li>
                  </ul>
              </div>
              
              <div class="section">
                  <h2>üîß Developer Tools</h2>
                  <ul>
                      <li><strong>Browser Deployment:</strong> No CLI required</li>
                      <li><strong>MetaMask Integration:</strong> Enhanced wallet connection</li>
                      <li><strong>Testing:</strong> Comprehensive test suite</li>
                      <li><strong>Security:</strong> ReentrancyGuard, access controls</li>
                  </ul>
              </div>
              
              <div class="section">
                  <h2>üìñ Philosophy</h2>
                  <p>This project demonstrates operating within systems while maintaining sovereignty - being "plugged into the system" (tax compliant) while retaining the ability to "unplug" (blockchain sovereignty).</p>
              </div>
          </body>
          </html>
          EOF

      - name: Create API Documentation
        run: |
          cat > dist/api.html << 'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>The Truth NFT - API Documentation</title>
              <style>
                  body { font-family: monospace; max-width: 1000px; margin: 0 auto; padding: 2rem; background: #1a1a1a; color: #00ff00; }
                  .endpoint { background: #2a2a2a; padding: 1rem; margin: 1rem 0; border-left: 4px solid #00ff00; }
                  .method { color: #ff6b6b; font-weight: bold; }
                  .path { color: #4ecdc4; }
                  .param { color: #ffe66d; }
                  .response { background: #0a0a0a; padding: 1rem; margin-top: 0.5rem; }
              </style>
          </head>
          <body>
              <h1>üîó The Truth NFT API Documentation</h1>
              
              <div class="endpoint">
                  <h3><span class="method">GET</span> <span class="path">/api/contract/status</span></h3>
                  <p>Get current contract deployment status and addresses</p>
                  <div class="response">
                      <strong>Response:</strong>
                      <pre>{
    "truthContract": "0x...",
    "bonusContract": "0x...",
    "paymentSplitter": "0x...",
    "network": "base-mainnet",
    "totalSupply": 77,
    "minted": 23,
    "available": 54
}</pre>
                  </div>
              </div>

              <div class="endpoint">
                  <h3><span class="method">POST</span> <span class="path">/api/mint</span></h3>
                  <p>Mint NFT with tax calculation</p>
                  <div class="response">
                      <strong>Parameters:</strong>
                      <ul>
                          <li><span class="param">walletAddress</span> - Recipient wallet address</li>
                          <li><span class="param">quantity</span> - Number to mint (max 1 per wallet)</li>
                          <li><span class="param">customerLocation</span> - For tax calculation</li>
                      </ul>
                  </div>
              </div>

              <div class="endpoint">
                  <h3><span class="method">GET</span> <span class="path">/api/metadata/{tokenId}</span></h3>
                  <p>Retrieve NFT metadata</p>
                  <div class="response">
                      <strong>Response:</strong>
                      <pre>{
    "name": "The Truth #1",
    "description": "A philosophical experiment...",
    "image": "ipfs://...",
    "attributes": [...]
}</pre>
                  </div>
              </div>

              <div class="endpoint">
                  <h3><span class="method">POST</span> <span class="path">/api/deploy/browser</span></h3>
                  <p>Browser-based contract deployment</p>
                  <div class="response">
                      <strong>Features:</strong>
                      <ul>
                          <li>MetaMask integration</li>
                          <li>Network configuration</li>
                          <li>Deployment status tracking</li>
                          <li>Gas estimation</li>
                      </ul>
                  </div>
              </div>

              <div class="endpoint">
                  <h3><span class="method">GET</span> <span class="path">/api/tax/calculate</span></h3>
                  <p>Calculate taxes using Stripe Tax API</p>
                  <div class="response">
                      <strong>Parameters:</strong>
                      <ul>
                          <li><span class="param">amount</span> - Transaction amount</li>
                          <li><span class="param">customerLocation</span> - Customer address</li>
                          <li><span class="param">productType</span> - NFT, audiobook, PDF</li>
                      </ul>
                  </div>
              </div>

              <p style="margin-top: 3rem; text-align: center; color: #666;">
                  "This is how we Operate in both realms, (Public & Private) all while rendering to Cesar what is due to Cesar."
              </p>
          </body>
          </html>
          EOF

      - name: Build Production Assets
        run: |
          # Ensure all paths are relative for GitHub Pages
          echo "Optimizing for GitHub Pages deployment..."
          
          # Update any absolute paths in JavaScript files
          find dist -name "*.js" -exec sed -i 's|http://localhost:5000||g' {} \;
          
          # Create a simple routing system for SPA
          cat > dist/404.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
              <script>
                  // GitHub Pages SPA redirect
                  sessionStorage.redirect = location.href;
              </script>
              <meta http-equiv="refresh" content="0;URL='/'">
          </head>
          <body></body>
          </html>
          EOF

      - name: Run Tests
        run: |
          echo "Running comprehensive test suite..."
          npx hardhat test
          echo "‚úÖ All tests passed"

      - name: Security Audit
        run: |
          echo "Running security checks..."
          # Check for common vulnerabilities
          grep -r "tx.origin" contracts/ && echo "‚ùå tx.origin found" || echo "‚úÖ No tx.origin usage"
          grep -r "block.timestamp" contracts/ && echo "‚ö†Ô∏è block.timestamp found" || echo "‚úÖ No timestamp dependence"
          grep -r "selfdestruct" contracts/ && echo "‚ùå selfdestruct found" || echo "‚úÖ No selfdestruct usage"
          echo "Security audit completed"

      - name: Generate Contract Documentation
        run: |
          echo "Generating contract documentation..."
          mkdir -p dist/contract-docs
          
          # Generate ABI documentation
          node -e "
          const fs = require('fs');
          const truthABI = JSON.parse(fs.readFileSync('artifacts/contracts/TheTruth.sol/TheTruth.json', 'utf8'));
          const bonusABI = JSON.parse(fs.readFileSync('artifacts/contracts/TruthBonusGift.sol/TruthBonusGift.json', 'utf8'));
          
          const docHtml = \`
          <!DOCTYPE html>
          <html>
          <head>
              <title>Smart Contract Documentation</title>
              <style>
                  body { font-family: monospace; background: #1a1a1a; color: #00ff00; padding: 2rem; }
                  .contract { border: 1px solid #00ff00; margin: 1rem 0; padding: 1rem; }
                  .function { background: #2a2a2a; padding: 0.5rem; margin: 0.5rem 0; }
              </style>
          </head>
          <body>
              <h1>üîó Smart Contract ABI Documentation</h1>
              
              <div class='contract'>
                  <h2>TheTruth.sol</h2>
                  <pre>\${JSON.stringify(truthABI.abi, null, 2)}</pre>
              </div>
              
              <div class='contract'>
                  <h2>TruthBonusGift.sol</h2>
                  <pre>\${JSON.stringify(bonusABI.abi, null, 2)}</pre>
              </div>
          </body>
          </html>
          \`;
          
          fs.writeFileSync('dist/contract-docs/index.html', docHtml);
          "

      - name: Create Network Configuration
        run: |
          # Create network configuration file for easy MetaMask setup
          cat > dist/networks.json << 'EOF'
          {
            "base_mainnet": {
              "chainId": "0x2105",
              "chainName": "Base",
              "rpcUrls": ["https://mainnet.base.org"],
              "blockExplorerUrls": ["https://basescan.org"],
              "nativeCurrency": {
                "name": "Ethereum",
                "symbol": "ETH",
                "decimals": 18
              }
            },
            "base_sepolia": {
              "chainId": "0x14A34",
              "chainName": "Base Sepolia",
              "rpcUrls": ["https://sepolia.base.org"],
              "blockExplorerUrls": ["https://sepolia.basescan.org"],
              "nativeCurrency": {
                "name": "Ethereum",
                "symbol": "ETH",
                "decimals": 18
              }
            }
          }
          EOF

      - name: Create Deployment Status Page
        run: |
          cat > dist/status.html << 'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>The Truth NFT - Deployment Status</title>
              <style>
                  body { font-family: 'Courier New', monospace; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 2rem; min-height: 100vh; }
                  .container { max-width: 800px; margin: 0 auto; background: rgba(0,0,0,0.7); padding: 2rem; border-radius: 15px; backdrop-filter: blur(10px); }
                  .status-item { background: rgba(255,255,255,0.1); padding: 1rem; margin: 1rem 0; border-radius: 8px; border-left: 4px solid #00ff00; }
                  .deployed { border-left-color: #00ff00; }
                  .pending { border-left-color: #ffaa00; }
                  .error { border-left-color: #ff0000; }
                  .quote { text-align: center; font-style: italic; margin: 2rem 0; font-size: 1.1em; opacity: 0.9; }
              </style>
          </head>
          <body>
              <div class="container">
                  <h1>üîÆ The Truth NFT Deployment Status</h1>
                  
                  <div class="quote">
                      "The Truth Doesn't Need To Be Pushed, Only The Lie...The Lie Only Needs To Be Whispered, But The Truth Always Remains Silent waiting to be Witnessed."
                      <br><small>‚Äî Jacque Antoine DeGraff</small>
                  </div>
                  
                  <div class="status-item deployed">
                      <h3>‚úÖ GitHub Pages Deployment</h3>
                      <p>Website successfully deployed to GitHub Pages</p>
                      <p><strong>URL:</strong> <span id="pages-url">Loading...</span></p>
                  </div>
                  
                  <div class="status-item pending">
                      <h3>‚è≥ Smart Contract Status</h3>
                      <p>Contracts ready for deployment</p>
                      <p><strong>Network:</strong> Base Mainnet (Chain ID: 8453)</p>
                      <p><strong>Ready to Deploy:</strong> TheTruth.sol, TruthBonusGift.sol, PaymentSplitter.sol</p>
                  </div>
                  
                  <div class="status-item deployed">
                      <h3>üí∞ Tax Compliance</h3>
                      <p>Florida Sales Tax Registration Active</p>
                      <p><strong>Tax ID:</strong> 23-8019835728-2</p>
                      <p><strong>Stripe Integration:</strong> Ready for automatic tax calculation</p>
                  </div>
                  
                  <div class="status-item deployed">
                      <h3>üåê Infrastructure</h3>
                      <p>All systems operational</p>
                      <ul>
                          <li>‚úÖ MetaMask Integration</li>
                          <li>‚úÖ IPFS Storage (Pinata)</li>
                          <li>‚úÖ Base Network Configuration</li>
                          <li>‚úÖ Browser Deployment Tools</li>
                      </ul>
                  </div>
                  
                  <div class="status-item deployed">
                      <h3>üõ°Ô∏è Security Features</h3>
                      <p>Enterprise-grade security implemented</p>
                      <ul>
                          <li>‚úÖ ReentrancyGuard Protection</li>
                          <li>‚úÖ One Mint Per Wallet</li>
                          <li>‚úÖ Access Control Modifiers</li>
                          <li>‚úÖ Immutable Provenance System</li>
                      </ul>
                  </div>
                  
                  <div style="text-align: center; margin-top: 3rem;">
                      <p style="opacity: 0.7;">
                          Operating in both realms (Public & Private)<br>
                          Rendering to Caesar what is due to Caesar
                      </p>
                  </div>
              </div>
              
              <script>
                  document.getElementById('pages-url').textContent = window.location.origin;
              </script>
          </body>
          </html>
          EOF

      - name: Optimize for GitHub Pages
        run: |
          echo "Final optimizations for GitHub Pages..."
          
          # Ensure all HTML files have proper DOCTYPE and meta tags
          find dist -name "*.html" -exec sed -i '1i<!DOCTYPE html>' {} \;
          
          # Create sitemap
          echo "Generating sitemap..."
          find dist -name "*.html" | sed 's|^dist||; s|/index.html$|/|; s|^|https://creodamo.github.io/The_Truth|' > dist/sitemap.txt
          
          echo "Build completed successfully! üöÄ"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Post-Deployment Verification
        run: |
          echo "üéâ The Truth NFT successfully deployed to GitHub Pages!"
          echo "üìç URL: ${{ steps.deployment.outputs.page_url }}"
          echo ""
          echo "Available endpoints:"
          echo "üè† Main Site: ${{ steps.deployment.outputs.page_url }}"
          echo "üöÄ Deployment: ${{ steps.deployment.outputs.page_url }}deploy.html"
          echo "üõí Shop: ${{ steps.deployment.outputs.page_url }}shop.html"
          echo "üìö Docs: ${{ steps.deployment.outputs.page_url }}docs/"
          echo "üìä Status: ${{ steps.deployment.outputs.page_url }}status.html"
          echo "üîó API Docs: ${{ steps.deployment.outputs.page_url }}api.html"
          echo ""
          echo "Philosophy in Action:"
          echo '"The Truth Doesn'\''t Need To Be Pushed, Only The Lie..."'
          echo "- Jacque Antoine DeGraff"

  # Optional: Notification job
  notify:
    runs-on: ubuntu-latest
    needs: [build, deploy]
    if: always()
    steps:
      - name: Deployment Status Notification
        run: |
          if [ "${{ needs.deploy.result }}" = "success" ]; then
            echo "üéâ The Truth NFT deployment successful!"
            echo "Operating in both realms - Public (GitHub Pages) & Private (Blockchain)"
          else
            echo "‚ùå Deployment failed. The Truth remains silent, waiting to be witnessed..."
          fi
